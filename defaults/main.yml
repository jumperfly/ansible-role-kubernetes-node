# Docker configuration - overrides for docker role
kube_docker_version: 18.06.*
kube_docker_daemon_json_data: |
  {
    "iptables": false,
    "ip-masq": false,
    "mtu": 0
  }

# Kubernetes configuration
kube_version: 1.12.1
kube_yum_repo_url: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
kube_yum_repo_gpg: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
kube_yum_repo_repo_gpgcheck: yes
kube_docker_registry: k8s.gcr.io
kube_apiserver_url: https://kubernetes:6443
kube_iface: eth0
kube_cluster_dns: 10.0.0.10 # Also configured in coredns role as coredns_cluster_ip
kube_cluster_domain: cluster.local

# Kubernetes kubelet configuration
kube_kubelet_config: /var/lib/kubelet/kubeconfig
kube_kubelet_args: --kubeconfig={{ kube_kubelet_config }} --pod-manifest-path=/etc/kubernetes/manifests --cluster-dns={{ kube_cluster_dns }} --cluster-domain={{ kube_cluster_domain }}

# Kubernetes kube_proxy configuration
kube_pod_cidr_range: 10.201.0.0/16 # Also configured in kubernetes_master role

# SSL configuration
kube_key: /srv/kubernetes/server.key
kube_cert: /srv/kubernetes/server.crt
kube_ca_cert: /srv/kubernetes/ca.crt

# Cert generation configuration
ca_host: ca
ca_dir: /etc/pki/CA/intermediate
ca_host_cert: "{{ ca_dir }}/certs/intermediate-chain.crt"
ca_organization_name: Ansible Certificate Authority

kube_cert_common_name: "{{ ansible_hostname }}"
kube_cert_country: GB
kube_cert_city: London
kube_cert_state: Greater London
kube_cert_organization_name: Ansible Certificate Authority
kube_cert_organizational_unit_name: Kubernetes Node
