- name: Ensure base directory exists
  file: path=/srv/kubernetes state=directory

- name: Check if key exists
  stat: path={{ kube_key }}
  register: key_result
- name: Generate key
  command: openssl genrsa -out {{ kube_key }} 2048
  when: not key_result.stat.exists
- name: Set key permissions
  file: path={{ kube_key }} mode=0600

- name: Read root cert from ca host
  slurp: src={{ ca_host_cert }}
  delegate_to: "{{ ca_host }}"
  run_once: true
  register: ca_cert_result
- name: Save CA cert
  copy: content={{ ca_cert_result.content | b64decode }} dest={{ kube_ca_cert }}

- name: Check if certificate exists
  stat: path={{ kube_cert }}
  register: cert_result
- name: Create CSR (block)
  block:
  - name: Create CSR
    command: >
      openssl req -new -key {{ kube_key }}
      -subj '/CN={{ kube_cert_common_name }}/C={{ kube_cert_country }}/O={{ kube_cert_organization_name }}/OU={{ kube_cert_organizational_unit_name }}/L={{ kube_cert_city }}/ST={{ kube_cert_state }}'
    register: csr_result
  - name: Save CSR on ca host
    copy: content={{ csr_result.stdout }} dest=/tmp/{{ kube_cert_common_name }}.csr
    delegate_to: "{{ ca_host }}"
    register: csr_copy_result
  - set_fact: csr_file={{ csr_copy_result.dest }}
  - set_fact: kube_cert={{ kube_cert }}
#  - name: Create certificate
#    shell: openssl ca -batch -config {{ ca_dir }}/openssl.cnf -infiles /tmp/{{ kube_cert_common_name }}.csr
#    delegate_to: "{{ ca_host }}"
#    register: create_cert_result
#  - name: Save certificate
#    copy: content={{ create_cert_result.stdout }} dest={{ kube_cert }}
  when: not cert_result.stat.exists
# This is only defined outside the above block as cert generation is not thread safe so we need to do them one at a time - https://github.com/ansible/ansible/issues/12170
- name: Create certificates
  command: openssl ca -batch -config {{ ca_dir }}/openssl.cnf -extensions v3_intermediate_ca_kube -infiles {{ hostvars[item].csr_copy_result.dest }}
  loop: "{{ play_hosts }}"
  when: hostvars[item].csr_file is defined
  delegate_to: "{{ ca_host }}"
  run_once: true
  register: create_cert_result
- name: Save certificates
  copy: content={{ item.stdout }} dest={{ hostvars[item.item].kube_cert }}
  loop: "{{ create_cert_result.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: item.skipped is not defined or not item.skipped
  delegate_to: "{{ item.item }}"
  run_once: true
